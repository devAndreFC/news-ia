services:
  frontend:
    build: ./frontend
    container_name: ${COMPOSE_PROJECT_NAME:-newsletter}-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: ${COMPOSE_PROJECT_NAME:-newsletter}-backend
    command: gunicorn app.wsgi:application --bind 0.0.0.0:9000
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-9000}:9000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: ${COMPOSE_PROJECT_NAME:-newsletter}-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-django}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-django}
      POSTGRES_DB: ${POSTGRES_DB:-newsletter}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ${COMPOSE_PROJECT_NAME:-newsletter}-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  news-curator:
    build: ./news-curator
    container_name: ${COMPOSE_PROJECT_NAME:-newsletter}-curator
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-newsletter}
      DB_USER: ${POSTGRES_USER:-django}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-django}
      GENERATION_INTERVAL: ${CURATOR_GENERATION_INTERVAL:-300}
      NEWS_PER_BATCH: ${CURATOR_NEWS_PER_BATCH:-3}
      LOG_LEVEL: ${CURATOR_LOG_LEVEL:-INFO}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-admin}
    depends_on:
      - db
      - backend
      - rabbitmq
    volumes:
      - ./news-curator:/app

volumes:
  postgres_data:
  rabbitmq_data:
